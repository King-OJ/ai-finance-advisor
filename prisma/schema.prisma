// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  userId            String
  user              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Expenses {
  id        String    @id @default(cuid())
  name      String
  category  String
  amount    Float
  budgetId  String
  budget    Budgets   @relation(fields: [budgetId], references: [id], onDelete: Cascade)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Income {
  id        String   @id @default(cuid())
  name      String
  createdBy String
  user      User     @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  emoji     String   @db.Text
  createdAt DateTime @default(now())
}

model Budgets {
  id        String     @id @default(cuid())
  createdBy String
  user      User       @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  name      String
  amount    Float
  expenses  Expenses[]
  createdAt DateTime   @default(now())
  updatedAt DateTime?  @updatedAt
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  password      String?
  image         String?
  emailVerified DateTime?
  role          String    @default("user")
  income        Income[]
  budgets       Budgets[]
  accounts      Account[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
}
