generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                Int     @id @default(autoincrement())
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  userId            Int
  user              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Budget {
  id           Int           @id @default(autoincrement())
  name         String
  category     String
  description  String?
  amount       Float
  spent        Float
  startDate    DateTime
  endDate      DateTime
  transactions Transaction[]
  createdBy    Int
  user         User          @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime?     @updatedAt
}

model Transaction {
  id        String   @id @default(cuid())
  merchant  String
  category  String
  budgetId  Int
  createdBy Int
  date      DateTime
  amount    Float
  status    Boolean? @default(false)
  user      User     @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  budget    Budget?  @relation(fields: [budgetId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
}

model User {
  id            Int           @id @default(autoincrement())
  email         String        @unique
  name          String?
  password      String?
  image         String?
  emailVerified DateTime?
  role          String        @default("user")
  transactions  Transaction[]
  budgets       Budget[]
  accounts      Account[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime?     @updatedAt
}
